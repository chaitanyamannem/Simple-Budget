/**
 * 
 */
package com.bus.sbud.dao.jdbc;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Logger;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;
import org.springframework.stereotype.Repository;

import com.bus.sbud.dao.CategoryDAO;
import com.bus.sbud.model.Category;
import com.bus.sbud.util.DateUtil;
import com.bus.sbud.util.SBUDConstants;

/**
 * @author chaitanyam
 * 
 */
@Repository
public class JDBCCategoryDAO implements CategoryDAO {
	private static final Logger logger = Logger.getLogger("JDBCCategoryDAO");

	private JdbcTemplate jdbcTemplate;
	private SimpleJdbcInsert insertCategory;

	@Autowired
	public void init(DataSource dataSource) {
		this.jdbcTemplate = new JdbcTemplate(dataSource);
		this.insertCategory = new SimpleJdbcInsert(dataSource).withTableName(
				SBUDConstants.TABLE_CATEGORY).usingGeneratedKeyColumns(
				SBUDConstants.TABLE_COMMON_COLUMN_ID);

	}

	public Category insert(Category category) {
		Map<String, Object> parameters = new HashMap<String, Object>(4);
		parameters.put(SBUDConstants.TABLE_COMMON_NAME, category.getName());
		Number autoGeneratedId = insertCategory.executeAndReturnKey(parameters);
		category.setId(autoGeneratedId.longValue());
		return category;

	}

	public int update(Category category) {
		String updateCategoryQuery = "UPDATE CATEGORY SET NAME=? WHERE ID = ?;";
		return this.jdbcTemplate.update(updateCategoryQuery,
				category.getName(), category.getId());
	}

	public Long findIdByName(String name) {

		String getCategoryIdQuery = "SELECT ID FROM CATEGORY WHERE NAME='"
				+ name + "';";
		try {
			logger.info("this " + this);
			logger.info("jdbcTemplate " + jdbcTemplate);
			return this.jdbcTemplate.queryForObject(getCategoryIdQuery,
					Long.class);
		} catch (EmptyResultDataAccessException e) {
			return null;
		}
	}

	public String findNameById(Long id) {
		logger.info("this " + this); 
		logger.info("jdbcTemplate " + jdbcTemplate);
		String getNameByIdQuery = "SELECT NAME FROM CATEGORY WHERE id='" + id
				+ "';";
		try {
			return this.jdbcTemplate.queryForObject(getNameByIdQuery,
					String.class);
		} catch (EmptyResultDataAccessException e) {
			return null;
		}
	}

	public List<Map<String, Object>> findTotalByCategoryForMonth(Date date) {

		String dateAsString = DateUtil.formatDate(date,
				DateUtil.DATE_FORMAT_YYYY_MM_DD_WITH_DASH);
		String getTotalByCategoryForMonthQuery = "SELECT CATEGORY_ID, SUM(AMOUNT) from EXPENSE WHERE (MONTH(SPENT_ON)) = (MONTH('"
				+ dateAsString + "')) GROUP BY CATEGORY_ID;";
		return this.jdbcTemplate.queryForList(getTotalByCategoryForMonthQuery);
	}
}
